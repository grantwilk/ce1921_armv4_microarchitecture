-- Copyright (C) 2018  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.

-- PROGRAM		"Quartus Prime"
-- VERSION		"Version 18.0.0 Build 614 04/24/2018 SJ Lite Edition"
-- CREATED		"Tue May 14 15:11:07 2019"

LIBRARY ieee;
USE ieee.std_logic_1164.all; 

LIBRARY work;

ENTITY SEG7OUT IS 
	PORT
	(
		LD :  IN  STD_LOGIC;
		RST :  IN  STD_LOGIC;
		CLK :  IN  STD_LOGIC;
		D :  IN  STD_LOGIC_VECTOR(31 DOWNTO 0);
		SEG0 :  OUT  STD_LOGIC_VECTOR(7 DOWNTO 0);
		SEG1 :  OUT  STD_LOGIC_VECTOR(7 DOWNTO 0);
		SEG2 :  OUT  STD_LOGIC_VECTOR(7 DOWNTO 0);
		SEG3 :  OUT  STD_LOGIC_VECTOR(7 DOWNTO 0);
		SEG4 :  OUT  STD_LOGIC_VECTOR(7 DOWNTO 0);
		SEG5 :  OUT  STD_LOGIC_VECTOR(7 DOWNTO 0)
	);
END SEG7OUT;

ARCHITECTURE bdf_type OF SEG7OUT IS 

COMPONENT reg
GENERIC (N : INTEGER
			);
	PORT(LD : IN STD_LOGIC;
		 RST : IN STD_LOGIC;
		 CLK : IN STD_LOGIC;
		 D : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
		 Q : OUT STD_LOGIC_VECTOR(31 DOWNTO 0)
	);
END COMPONENT;

COMPONENT seg7decoder
	PORT(A : IN STD_LOGIC_VECTOR(31 DOWNTO 0);
		 SEG0 : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
		 SEG1 : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
		 SEG2 : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
		 SEG3 : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
		 SEG4 : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
		 SEG5 : OUT STD_LOGIC_VECTOR(7 DOWNTO 0)
	);
END COMPONENT;

SIGNAL	SYNTHESIZED_WIRE_0 :  STD_LOGIC_VECTOR(31 DOWNTO 0);


BEGIN 



b2v_inst : reg
GENERIC MAP(N => 32
			)
PORT MAP(LD => LD,
		 RST => RST,
		 CLK => CLK,
		 D => D,
		 Q => SYNTHESIZED_WIRE_0);


b2v_inst1 : seg7decoder
PORT MAP(A => SYNTHESIZED_WIRE_0,
		 SEG0 => SEG0,
		 SEG1 => SEG1,
		 SEG2 => SEG2,
		 SEG3 => SEG3,
		 SEG4 => SEG4,
		 SEG5 => SEG5);


END bdf_type;